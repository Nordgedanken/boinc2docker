#!/bin/bash

set -e

cd apps/boinc2docker/1.0

ensure_file() {
    test -f $1 && echo "Found locally: $1" || (echo "Downloading $2..."; curl -L $2 -o $1)
    grep '{"error":"Not Found"}' $1 && { echo "Download failed: $1"; rm $1; exit 1; } || :
}

#get latest versions of ISO and vboxwrapper from git tag
#(or pre-defined ISOTAG and VBOXTAG variables)
TAGROOT=https://github.com/marius311/boinc2docker/releases/download
ISOTAG=${ISOTAG:-$(git describe --tags --abbrev=0 --match "iso/*" | cut -d "/" -f 2)}
VBOXTAG=${VBOXTAG:-$(git describe --tags --abbrev=0 --match "vboxwrapper/*" | cut -d "/" -f 2)}

#ensure ISO
ensure_file example/vm_isocontext_${ISOTAG}.iso ${TAGROOT}/iso%2F${ISOTAG}/vm_isocontext_${ISOTAG}.iso

#ensure vboxwrapper executable and copy files into app version folders
platforms=(            "x86_64-pc-linux-gnu" "windows_x86_64" "x86_64-apple-darwin")
vboxwrapper_versions=( "26178"               "26178"          "26178"              )
for i in 0 1 2; do 
    platform=${platforms[i]}
    platformdir=${platform}__vbox64_mt
    vboxwrapper_version=${vboxwrapper_versions[i]}
    mkdir -p ${platformdir}
    cp example/version.xml example/vm_isocontext_${ISOTAG}.iso ${platformdir}
    vboxwrapper=vboxwrapper_${vboxwrapper_version}_${platform} 
    if [[ $platform == "windows"* ]]; then vboxwrapper=${vboxwrapper}.exe; fi
    ensure_file example/$vboxwrapper ${TAGROOT}/vboxwrapper%2F${VBOXTAG}/$vboxwrapper
    cp example/$vboxwrapper $platformdir
    sed -i "s/%vboxwrapper%/$vboxwrapper/g" ${platformdir}/version.xml 
    sed -i "s/%iso%/vm_isocontext_${ISOTAG}.iso/g" ${platformdir}/version.xml
done
